name: back-end_development
on:
  push:
    branches: [development]

jobs:
  build: 
    runs-on: self-hosted
    strategy:
      matrix: 
        PATH_TO_SLN_OR_CSPROJ:
          - "./Back-end/UserMicroservice/UserMicroservice.csproj"
          - "./Back-end/UserMicroservice.Test/UserMicroservice.Test.csproj"
          - "./Back-end/Gateway/Gateway.csproj"
          - "./Back-end/MusicizeAPI.sln"

    steps:
      - name: Clone repo to runner
        uses: actions/checkout@v3

      - name: build 
        uses: ./.github/actions/back-end/build
        with:
          PATH_TO_SLN_OR_CSPROJ: ${{matrix.PATH_TO_SLN_OR_CSPROJ}}

  test: 
    runs-on: self-hosted
    strategy:
      matrix: 
        PATH_TO_TEST_CSPROJ:
          - "./Back-end/UserMicroservice.Test/UserMicroservice.Test.csproj"

    steps:
      - name: Clone repo to runner
        uses: actions/checkout@v3

      - name: test 
        uses: ./.github/actions/back-end/test
        with:
          PATH_TO_TEST_CSPROJ: ${{matrix.PATH_TO_TEST_CSPROJ}}


  sonarcloud: 
    name: sonarcloud
    runs-on: self-hosted
      steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"AlphaYouss_2022-Musicize" /o:"alphayouss" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build -restore './Back-end/MusicizeAPI.sln'
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  containerize:
    runs-on: self-hosted
    needs:
      - build
      - test
      - sonarcloud
    strategy:
      matrix: 
        array: [
          {
            PATH_TO_DOCKERFILE: "./Back-end/UserMicroservice/",
            DOCKER_IMAGE_NAME: "usermicroservice",
            DOCKER_REPO_NAME: "i441585y/usermicroservice"
          },
          {
            PATH_TO_DOCKERFILE: "./Back-end/Gateway/",
            DOCKER_IMAGE_NAME: "gateway",
            DOCKER_REPO_NAME: "i441585y/gateway"
          },
      ]

    steps:
    - name: Clone repo to runner
      uses: actions/checkout@v3

    - name: containerize 
      uses: ./.github/actions/back-end/containerize
      with:
        PATH_TO_DOCKERFILE: ${{matrix.array.PATH_TO_DOCKERFILE}}
        DOCKER_IMAGE_NAME: ${{matrix.array.DOCKER_IMAGE_NAME}}
        DOCKER_REPO_NAME: ${{matrix.array.DOCKER_REPO_NAME}}
        DOCKER_ACCTOKEN: ${{secrets.DOCKER_ACCTOKEN}}
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}